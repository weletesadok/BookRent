generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  RENTER
  ADMIN
  OWNER
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  avatar      String[]
  phoneNumber String
  location    String
  role        Role @default(RENTER)
  approved    Boolean  @default(false)
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  books       Book[]  
  ownedRents  Rent[]   @relation("OwnerRents") 
  rentedRents Rent[]   @relation("RenterRents") 
  revenues    Revenue[]
}


model Book {
  id             Int       @id @default(autoincrement())
  name           String
  author         String
  category       String[]
  publicationDate DateTime
  details        String
  owner          User      @relation(fields: [ownerId], references: [id])
  ownerId        Int
  quantity       Int
  price          Float
  image          String[]
  rating         Int? @default(0)
  rented         Int   @default(0)
  approved       Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  revenues       Revenue[]
}

model Rent {
  id         Int      @id @default(autoincrement())
  owner      User     @relation("OwnerRents", fields: [ownerId], references: [id])
  ownerId    Int
  renter     User     @relation("RenterRents", fields: [renterId], references: [id])
  renterId   Int
  totalPrice Float
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Revenue {
  id         Int      @id @default(autoincrement())
  book       Book     @relation(fields: [bookId], references: [id])
  bookId     Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  amount     Float
  createdAt  DateTime @default(now())
}
